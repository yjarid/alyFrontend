{"version":3,"sources":["components/MapResultPage/MapResult/MapResult.module.scss","components/MapResultPage/MapResultPage.module.scss","components/UI/Map/SimpleMap.module.scss","utils/preventManyReq.js","components/MapResultPage/MapResult/MapResult.js","customHooks/useMapBound.js","components/UI/Map/SimpleMap.js","components/MapResultPage/MapResultPage.js","components/Search/SearchResultPage/SearchResultPage.js"],"names":["module","exports","scrollToRef","source","makeRequestCreator","ref","window","scrollTo","current","offsetTop","MapResult","data","selectedBus","selectedBusFunc","scroll","myRef","useRef","BusId","_id","useEffect","className","styles","gridContainer","map","item","i","key","onMouseEnter","BuzCard","busCard","useMapBound","zoom","useState","bounds","setBound","boundChange","setPrevBound","prevZoom","setPrevZoom","length","newMiddlePointLat","newMiddlePointLng","oldMiddlePointLat","oldMiddlePointLng","difference","Math","abs","iconRed","L","Icon","iconUrl","iconSize","iconBlue","SimpleMap","area","initZoom","mapBounds","selectedBusfromParent","setZoom","setSelectedBus","mapRef","featureRef","max","idFromParent","businesses","initialCor","lat","lng","updateMap","b","leafletElement","getBounds","zoomm","getZoom","initBound","getSouthWest","getNorthEast","console","log","Map","onViewportChanged","center","minZoom","TileLayer","url","attribution","FeatureGroup","bus","id","rating","nbrRev","totRev","Marker","position","location","coordinates","icon","onClick","markerClicked","onMouseOver","e","target","openPopup","markerHoover","Popup","autoPan","popUpTitle","to","name","StyledRating","value","precision","size","readOnly","MapResultPage","mapBounds2","setScroll","showMapMob","setShowMapMob","listMap","listMapBtn","searchResContainer","fixContainer","mapContainer","bound","SearchResultPage","props","appDispatch","useContext","DispatchContext","queryString","parse","search","locCat","useLazyQuery","GET_BUSINESSES","getBusiness","loading","error","dataL","useQuery","LOCATION","variables","neigh","dataFinal","locationObj","query","limit","city","neighborhood","type","message","title","withTopBar","upCaseFirstLetter"],"mappings":"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","file":"static/js/13.5af44dbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedBus\":\"MapResult_selectedBus__3BR5a\",\"busCard\":\"MapResult_busCard__2EnNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResContainer\":\"MapResultPage_searchResContainer__27PT7\",\"mapContainer\":\"MapResultPage_mapContainer__3nirv\",\"fixContainer\":\"MapResultPage_fixContainer__DU6q7\",\"listMap\":\"MapResultPage_listMap__1YLp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating\":\"SimpleMap_rating__16dYM\",\"popUpTitle\":\"SimpleMap_popUpTitle__1hYOa\"};","import axios from 'axios'\r\n\r\nconst makeRequestCreator = () => {\r\n  let source\r\n\r\n  return async (query) => {\r\n\r\n    // Check if we made a request\r\n    if(source){\r\n      // Cancel the previous request before making a new request\r\n      source.cancel()\r\n    }\r\n  \r\n    // Create a new CancelToken\r\n     source = axios.CancelToken.source()\r\n     \r\n    try{\r\n      \r\n      const res = await axios.get(query, {cancelToken: source.token})\r\n      \r\n      const result = res.data\r\n      return result;\r\n    } catch(error) {\r\n        if(axios.isCancel(error)) {\r\n          // Handle if request was cancelled\r\n          console.log('Request canceled', error.message);\r\n        } else {\r\n          // Handle usual errors\r\n          console.log('Something went wrong: ', error.message)\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nexport const preventManyReq = makeRequestCreator()\r\n\r\n\r\n// scroll to particular element\r\nexport const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   ","import React, { useRef, useEffect } from \"react\"\r\nimport BuzCard from \"../../UI/Cards/BuzCard/BuzCard\"\r\nimport styles from \"./MapResult.module.scss\"\r\nimport { upCaseFirstLetter } from \"../../../utils/string\"\r\nimport { scrollToRef } from \"../../../utils/preventManyReq\"\r\n\r\nfunction MapResult({ data, selectedBus, selectedBusFunc, scroll }) {\r\n  const myRef = useRef(null)\r\n\r\n  const BusId = selectedBus ? selectedBus._id : null\r\n\r\n  useEffect(() => {\r\n    if (myRef.current && scroll) {\r\n      scrollToRef(myRef)\r\n    }\r\n  }, [BusId, scroll])\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.gridContainer}>\r\n        {data.map((item, i) => {\r\n          if (item._id == BusId) {\r\n            return (\r\n              <div key={i} ref={myRef} className={styles.selectedBus} onMouseEnter={() => selectedBusFunc(item)}>\r\n                <BuzCard data={item} />\r\n              </div>\r\n            )\r\n          }\r\n          return (\r\n            <div className={styles.busCard} key={i} onMouseEnter={() => selectedBusFunc(item, false)}>\r\n              <BuzCard data={item} />\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MapResult\r\n","import { useState } from \"react\"\r\n\r\nconst useMapBound = zoom => {\r\n  const [bounds, setBound] = useState([])\r\n  const [boundChange, setPrevBound] = useState([])\r\n  const [prevZoom, setPrevZoom] = useState(8)\r\n\r\n  if (bounds.length >= 0) {\r\n    // calculation to prevent sending a request with evry move to the map or a zoom\r\n\r\n    let newMiddlePointLat = (bounds[1] + bounds[3]) / 2\r\n    let newMiddlePointLng = (bounds[0] + bounds[2]) / 2\r\n    let oldMiddlePointLat = (boundChange[1] + boundChange[3]) / 2\r\n    let oldMiddlePointLng = (boundChange[0] + boundChange[2]) / 2\r\n\r\n    let difference = Math.abs(newMiddlePointLat - oldMiddlePointLat) + Math.abs(newMiddlePointLng - oldMiddlePointLng)\r\n\r\n    if (prevZoom != zoom) {\r\n      setPrevZoom(zoom)\r\n      setPrevBound(bounds)\r\n    } else if ((difference >= 0.04 && zoom >= 11) || (difference >= 0.03 && zoom == 13) || (difference >= 0.02 && zoom == 14) || (difference >= 0.01 && zoom >= 15) || (difference >= 0.006 && zoom >= 17)) {\r\n      setPrevZoom(zoom)\r\n      setPrevBound(bounds)\r\n    }\r\n  }\r\n\r\n  return [boundChange, setBound]\r\n}\r\n\r\nexport default useMapBound\r\n","import React, { useRef, useState, useEffect, Fragment } from \"react\"\r\nimport { Map, Marker, TileLayer, Popup, FeatureGroup } from \"react-leaflet\"\r\nimport L from \"leaflet\"\r\nimport { StyledRating } from \"../../UI/CustomFields/StyledRating\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styles from \"./SimpleMap.module.scss\"\r\nimport useMapBound from \"../../../customHooks/useMapBound\"\r\n\r\nconst iconRed = new L.Icon({\r\n  iconUrl: \"/svg/marker.svg\",\r\n  iconSize: [25, 25]\r\n})\r\nconst iconBlue = new L.Icon({\r\n  iconUrl: \"/svg/marker-blue.svg\",\r\n  iconSize: [25, 25]\r\n})\r\n\r\nexport default function SimpleMap({ data, area, initZoom, mapBounds, selectedBusFunc, selectedBusfromParent }) {\r\n  const [zoom, setZoom] = useState(initZoom)\r\n  const [selectedBus, setSelectedBus] = useState(selectedBusfromParent)\r\n  const mapRef = useRef()\r\n  const featureRef = useRef()\r\n  const [boundChange, setBound] = useMapBound(Math.max(zoom, initZoom))\r\n\r\n  const idFromParent = selectedBusfromParent ? selectedBusfromParent._id : null\r\n  // data\r\n  const businesses = data ? data : []\r\n  let initialCor = area ? [area.lat, area.lng] : [31.791702, -7.09262]\r\n\r\n  console.log(businesses)\r\n  useEffect(() => {\r\n    setSelectedBus(selectedBusfromParent)\r\n  }, [idFromParent])\r\n\r\n  useEffect(() => {\r\n    mapBounds(boundChange)\r\n  }, [boundChange])\r\n\r\n  // get bounds\r\n\r\n  function updateMap() {\r\n    const b = mapRef.current.leafletElement.getBounds()\r\n    const zoomm = mapRef.current.leafletElement.getZoom()\r\n    const initBound = [b.getSouthWest().lng, b.getSouthWest().lat, b.getNorthEast().lng, b.getNorthEast().lat]\r\n    console.log(initBound)\r\n    setZoom(zoomm)\r\n    setBound(initBound)\r\n  }\r\n\r\n  const markerClicked = bus => {\r\n    setSelectedBus(bus)\r\n    selectedBusFunc(bus, true)\r\n  }\r\n\r\n  const markerHoover = (e, bus) => {\r\n    e.target.openPopup()\r\n    setSelectedBus(bus)\r\n  }\r\n\r\n  const selectIcon = id => {\r\n    if (selectedBus) {\r\n      if (id == selectedBus._id) {\r\n        return iconRed\r\n      }\r\n    }\r\n    return iconBlue\r\n  }\r\n\r\n  return (\r\n    <Map onViewportChanged={updateMap} center={initialCor} zoom={zoom} minZoom={11} onViewportChanged={updateMap} ref={mapRef}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' />\r\n\r\n      <FeatureGroup ref={featureRef}>\r\n        {businesses.map(bus => {\r\n          let rating = bus.nbrRev ? bus.totRev / bus.nbrRev : 0\r\n\r\n          // we have a single point (crime) to render\r\n\r\n          return (\r\n            <Marker position={[bus.location.coordinates[1], bus.location.coordinates[0]]} icon={selectIcon(bus._id)} onClick={() => markerClicked(bus)} onMouseOver={e => markerHoover(e, bus)} key={bus._id}>\r\n              {selectedBus && (\r\n                <Popup position={[selectedBus.location.coordinates[1], selectedBus.location.coordinates[0]]} autoPan={false}>\r\n                  <div>\r\n                    <div className={styles.popUpTitle}>\r\n                      <Link to={`/business/${selectedBus._id}`}>{selectedBus.name}</Link>\r\n                    </div>\r\n                    <div className={styles.rating}>\r\n                      <StyledRating name=\"customized-color\" value={rating} precision={0.5} size=\"small\" readOnly />\r\n                      <div>{bus.nbrRev} reviews</div>\r\n                    </div>\r\n                  </div>\r\n                </Popup>\r\n              )}\r\n            </Marker>\r\n          )\r\n        })}\r\n      </FeatureGroup>\r\n    </Map>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport MapResult from \"./MapResult/MapResult\"\r\nimport styles from \"./MapResultPage.module.scss\"\r\nimport SimpleMap from \"../UI/Map/SimpleMap\"\r\n\r\nfunction MapResultPage({ businesses, location, mapBounds2, zoom }) {\r\n  const [selectedBus, setSelectedBus] = useState(null)\r\n  const [scroll, setScroll] = useState(false)\r\n  const [showMapMob, setShowMapMob] = useState(null)\r\n\r\n  const selectedBusFunc = (bus, scroll) => {\r\n    setSelectedBus(bus)\r\n    setScroll(scroll)\r\n  }\r\n\r\n  const mapBounds = bound => mapBounds2(bound)\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.listMap}>\r\n        <button>\r\n          <span className={styles.listMapBtn} onClick={() => setShowMapMob(\"list\")}>\r\n            List\r\n          </span>\r\n        </button>\r\n        <button>\r\n          <span className={styles.listMapBtn} onClick={() => setShowMapMob(\"map\")}>\r\n            Map\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div className={styles.searchResContainer}>\r\n        {(!showMapMob || showMapMob == \"list\") && <MapResult data={businesses} selectedBus={selectedBus} selectedBusFunc={selectedBusFunc} scroll={scroll} />}\r\n        <div className={styles.fixContainer}>\r\n          <div className={styles.mapContainer}>{(!showMapMob || showMapMob == \"map\") && <SimpleMap data={businesses} area={location ? { lat: location.lat, lng: location.lng } : { lat: \"33.573109\", lng: \"-7.617050\" }} mapBounds={mapBounds} initZoom={zoom} selectedBusFunc={selectedBusFunc} selectedBusfromParent={selectedBus} />}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MapResultPage\r\n","import React, { useState, useContext, useEffect } from \"react\"\r\nimport { GET_BUSINESSES } from \"../../../qraphQl/businessType\"\r\nimport { LOCATION } from \"../../../qraphQl/taxonomyType\"\r\nimport Spinner from \"../../UI/Spinner/Spinner\"\r\nimport Page from \"../../Page/Page\"\r\nimport queryString from \"query-string\"\r\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\"\r\nimport { DispatchContext } from \"../../../Context\"\r\nimport MapResultPage from \"../../MapResultPage/MapResultPage\"\r\nimport { upCaseFirstLetter } from \"../../../utils/string\"\r\n\r\nfunction SearchResultPage(props) {\r\n  const appDispatch = useContext(DispatchContext)\r\n  const [bound, setBound] = useState([])\r\n  const { location, name, locCat } = queryString.parse(props.location.search)\r\n\r\n  const [getBusiness, { data, loading, error }] = useLazyQuery(GET_BUSINESSES)\r\n  const { data: dataL } = useQuery(LOCATION, { variables: { neigh: location } })\r\n\r\n  const dataFinal = typeof data != \"undefined\" ? data.businesses : []\r\n  const locationObj = typeof dataL != \"undefined\" ? dataL.location : null\r\n\r\n  useEffect(() => {\r\n    let variables = { query: name, bound, limit: 20 }\r\n    if (locCat == \"city\") {\r\n      variables.city = location\r\n    } else {\r\n      variables.neighborhood = location\r\n    }\r\n    getBusiness({ variables })\r\n  }, [bound[0], name, location])\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      appDispatch({ type: \"flashMessage\", value: { message: \"Something went wrong\", type: \"error\" } })\r\n    }\r\n  }, [error])\r\n\r\n  const mapBounds2 = bounds => {\r\n    setBound(bounds)\r\n  }\r\n\r\n  return (\r\n    <Page title=\"Search Results\" withTopBar={true}>\r\n      {loading && <Spinner />}\r\n      <h2 className=\"searchTitle\">\r\n        Results for {upCaseFirstLetter(name)} in {upCaseFirstLetter(location)}\r\n      </h2>\r\n      <MapResultPage businesses={dataFinal} location={locationObj} mapBounds2={mapBounds2} zoom={12} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default SearchResultPage\r\n"],"sourceRoot":""}