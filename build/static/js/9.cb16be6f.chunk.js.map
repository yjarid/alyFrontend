{"version":3,"sources":["qraphQl/revStatType.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Cards/ReviewCard/ReviewReportForm/ReviewReportForm.js","components/UI/Cards/ReviewCard/ReviewCard.js","components/UI/Cards/ReviewCard/ReviewReportForm/ReviewReportForm.module.scss","components/UI/Cards/ReviewCard/ReviewCard.module.scss","components/Business/BuzSinglePage/BuzSingleComp/BuzSinglePic/BuzSinglePic.module.scss","components/Business/BuzSinglePage/BuzSingleComp/BuzSingleHead/BuzSingleHead.module.scss","components/Review/ReviewForm.module.scss","components/Business/BuzSinglePage/BuzSingleComp/BuzSingleDesc/BuzSingleDesc.module.scss","components/Business/BuzSinglePage/BuzSingleComp/BuzSingleReviews/BuzSingleReviews.module.scss","components/Business/BuzSinglePage/BuzSingleComp/BuzSinglePic/BuzSinglePic.js","components/UI/Upload/DropZoneMultiple.js","components/Review/ReviewForm.js","components/Review/AddReview.js","components/Business/BuzSinglePage/BuzSingleComp/BuzSingleHead/BuzSingleHead.js","components/Business/BuzSinglePage/BuzSingleComp/BuzSingleDesc/BuzSingleDesc.js","components/Business/BuzSinglePage/BuzSingleComp/BuzSingleReviews/BuzSingleReviews.js","components/Business/BuzSinglePage/BuzSinglePage.js"],"names":["CREATE_REVREPORT","gql","GET_REVREPORTS","UPDATE_REVREPORT","Backdrop","props","show","className","onClick","clicked","Modal","nextProps","nextState","this","update","modalClosed","style","transform","opacity","children","Component","ReviewReportForm","reviewId","useState","isSubmiting","setIsSubmiting","message","type","flash","setFlash","desc","setDesc","useMutation","onCompleted","updateImage","onError","error","errMsg","replace","createRevReport","loading","styles","mainContainer","textAreaDesc","onChange","e","target","value","btnDesc","length","variables","id","report","FlashMessage","ReviewCard","review","showModal","setShowModal","isTablet","useMediaQuery","query","console","log","modalInfo","imageFromReviews","data","url","isUser","business","_id","author","name","userName","dt","dayjs","createdAt","revContainer","key","revContainerInner","revContainerAvatar","picture","src","size","color","revAuth","to","upCaseFirstLetter","revChips","followers","nbrRev","revPic","location","revRating","StyledRating","rating","readOnly","date","format","revDesc","text","revPicture","ImageGrid","images","clap","Clap","claps","reportbtn","module","exports","BuzSinglePic","reviews","top","DropZone","field","form","setFieldValue","img","setImg","statefiles","setStatefiles","useDropzone","onDrop","acceptedFiles","firstThreeFile","slice","selectedFiles","file","myFileReader","FileReader","addEventListener","prevImg","result","readAsDataURL","multiple","getRootProps","getInputProps","isDragActive","ReviewForm","onSubmit","businessId","RevFormik","withFormik","mapPropsToValues","validationSchema","Yup","shape","required","max","handleSubmit","values","setSubmitting","setFieldError","errors","touched","topContainer","container","innerContainer","Rating","event","newValue","multiline","rows","label","dropZone","component","DropZoneMultiple","AddReview","setBuzStat","appDispatch","useContext","DispatchContext","CREATE_REVIEW","createReview","window","scrollTo","Spinner","useStyles","makeStyles","theme","chip","padding","fontSize","breakpoints","up","BuzSingleHead","history","classes","buzStat","modal","setModal","neighborhood","city","subCat","cat","totRev","owner","price","CREATE_CLAIM","createClaim","head","headInner","imageContainer","precision","map","i","reviewClaim","Chip","icon","clickable","loginRequired","claim","BuzSingleDesc","mainBody","BuzSingleReviews","rev","BuzSinglePage","useQuery","GET_BUSINESS_WITH_REVIEWS","match","params","onlyAuthor","useEffect","forEach","Array","isArray","Page","title","withTopBar"],"mappings":"g/BAEO,IAAMA,EAAmBC,IAAH,KAQhBC,EAAiBD,IAAH,KAuBdE,EAAmBF,IAAH,M,kGC1BdG,G,cAJE,SAACC,GAAD,OACbA,EAAMC,KAAO,yBAAKC,UAAU,WAAWC,QAASH,EAAMI,UAAkB,OCAtEC,E,8LAEsBC,EAAWC,GAC/B,OAAOD,EAAUL,OAASO,KAAKR,MAAMC,MAAQK,EAAUG,SAAWD,KAAKR,MAAMS,S,+BAM7E,OACI,6BACI,kBAAC,EAAD,CAAUR,KAAMO,KAAKR,MAAMC,KAAMG,QAASI,KAAKR,MAAMU,cACrD,yBACIR,UAAU,QACVS,MAAO,CACHC,UAAWJ,KAAKR,MAAMC,KAAO,gBAAkB,qBAC/CY,QAASL,KAAKR,MAAMC,KAAO,IAAM,MAErCO,KAAKR,MAAMC,KAAOO,KAAKR,MAAMc,SAAW,W,GAlBxCC,aAyBLV,O,6JCsCAW,EA7DU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAECC,oBAAS,GAFV,mBAE9BC,EAF8B,KAEjBC,EAFiB,OAGXF,mBAAS,CAACG,QAAS,KAAMC,KAAM,OAHpB,mBAG9BC,EAH8B,KAGvBC,EAHuB,OAIbN,mBAAS,sCAJI,mBAI9BO,EAJ8B,KAIxBC,EAJwB,OAMAC,YACjChC,IACA,CACEiC,YADF,YAC6B,EAAdC,YACXT,GAAe,GACfI,EAAS,CAACH,QAAQ,qCAAuCC,KAAM,YAEjEQ,QALF,SAKUC,GACJ,IAAIC,EAASD,EAAMV,QAAQY,QAAQ,iBAAkB,IACvDT,EAAS,CAACH,QAASW,EAASV,KAAM,aAfL,mBAM9BY,EAN8B,UAMZC,QA4CzB,OACI,yBAAKjC,UAAWkC,IAAOC,eACnB,6BACE,8BAAUnC,UAAWkC,IAAOE,aAAcC,SAlCjC,SAACC,GAChBhB,EAAS,CAACH,QAAQ,KAAOC,KAAM,OACrBkB,EAAEC,OAAOC,MACnBhB,EAAQc,EAAEC,OAAOC,QA+BqDA,MAAOjB,KAEzE,0BAAMvB,UAAWkC,IAAOO,QAASxC,QA9BtB,WACf,IAAGgB,EAAH,CAGAC,GAAe,GACf,IAAIwB,EAASnB,EAAKmB,OAEL,GAAVA,GACCpB,EAAS,CAACH,QAAQ,qBAAuBC,KAAM,UAC/CF,GAAe,IAGXK,GAAQmB,EAAS,KACrBpB,EAAS,CAACH,QAAQ,wCAAD,OAAyCuB,GAAWtB,KAAM,UAC3EF,GAAe,IAKfc,EAAgB,CAACW,UAAW,CACxBC,GAAI7B,EAAU8B,OAAQtB,QAU1B,UACCF,EAAMF,SAAW,kBAAC2B,EAAA,EAAD,CAAc3B,QAASE,EAAMF,QAASC,KAAMC,EAAMD,S,0HCiDjE2B,IA9Ff,YAAiC,IAAXC,EAAU,EAAVA,OAAU,EACIhC,oBAAS,GADb,mBACvBiC,EADuB,KACZC,EADY,KAExBC,EAAWC,wBAAc,CAC7BC,MAAO,8BAGTC,QAAQC,IAAIP,GAEZ,IAAIQ,EAAYC,YAAiBT,GAE7BU,EAAO,KACPC,EAAM,KACNC,GAAS,EACTxC,EAAO,WAEmB,oBAAnB4B,EAAOa,UAChBH,EAAOV,EAAOa,SACdF,EAAG,oBAAgBD,EAAKI,MACS,oBAAjBd,EAAOe,UACvBL,EAAOV,EAAOe,QACTC,KAAON,EAAKO,SACjBN,EAAG,mBAAeD,EAAKI,KACvB1C,EAAO,UACPwC,GAAS,GAGX,IAAMM,EAAKC,IAAMnB,EAAOoB,WAMxB,OACE,kBAAC,WAAD,KACE,kBAACjE,EAAA,EAAD,CAAOJ,KAAMkD,EAAWzC,YANR,WAClB0C,GAAa,KAMT,kBAAC,EAAD,CAAkBnC,SAAUiC,EAAOc,OAGrC,yBAAK9D,UAAWkC,IAAOmC,aAAczB,GAAII,EAAOc,IAAKQ,IAAKtB,EAAOc,KAC/D,yBAAK9D,UAAWkC,IAAOqC,mBACrB,yBAAKvE,UAAWkC,IAAOsC,oBAAqBd,EAAKe,QAAU,yBAAKC,IAAKhB,EAAKe,UAAcb,EAAS,kBAAC,IAAD,CAAce,KAAK,MAAMC,MAAM,YAAe,kBAAC,IAAD,CAAeD,KAAK,MAAMC,MAAM,aAC/K,6BACE,yBAAK5E,UAAWkC,IAAO2C,SACrB,kBAAC,OAAD,CAAMC,GAAInB,GAAMoB,YAAkBrB,EAAKM,QAEzC,yBAAKhE,UAAWkC,IAAO8C,UACrB,yBAAKhF,UAAU,kBACZ4D,GACC,yBAAK5D,UAAU,QACb,kBAAC,IAAD,CAAkB4E,MAAM,YACxB,yBAAK5E,UAAU,SAAf,UAA2B0D,EAAKuB,UAAUvC,OAA1C,YAAoDS,EAAW,YAAc,MAGjF,yBAAKnD,UAAU,QACb,kBAAC,IAAD,CAAY4E,MAAM,YAClB,yBAAK5E,UAAU,SAAf,UAA2B0D,EAAKwB,OAAhC,YAA0C/B,EAAW,UAAY,IAAjE,MAEF,yBAAKnD,UAAU,QACb,kBAAC,IAAD,CAAc4E,MAAM,YACpB,yBAAK5E,UAAU,SAAf,UAA2B0D,EAAKyB,OAAhC,YAA0ChC,EAAW,SAAW,QAItE,yBAAKnD,UAAWkC,IAAOkD,UACrB,kBAAC,OAAD,CAAMN,GAAE,iCAAR,eAEF,yBAAK9E,UAAWkC,IAAOmD,WACrB,kBAACC,EAAA,EAAD,CAAc9C,MAAOQ,EAAOuC,OAAQZ,KAAOxB,EAAqB,SAAV,QAAoBqC,UAAQ,IAClF,yBAAKxF,UAAWkC,IAAOuD,MAAOvB,EAAGwB,OAAO,kBAK9C,uBAAG1F,UAAWkC,IAAOyD,SAAU3C,EAAO4C,MAEtC,yBAAK5F,UAAWkC,IAAO2D,YACrB,kBAACC,EAAA,EAAD,CAAWC,OAAQvC,EAAWpC,KAAMA,KAGtC,yBAAKpB,UAAWkC,IAAO8D,MACrB,kBAACC,EAAA,EAAD,CAAMC,MAAOlD,EAAOkD,OAAS,EAAGtD,GAAII,EAAOc,IAAK1C,KAAK,YAGvD,uBAAGpB,UAAWkC,IAAOW,QAArB,oCAEE,0BAAM7C,UAAWkC,IAAOiE,UAAWlG,QAAS,kBAAMiD,GAAa,KAA/D,kB,oBCrGVkD,EAAOC,QAAU,CAAC,cAAgB,wCAAwC,aAAe,uCAAuC,QAAU,oC,oBCA1ID,EAAOC,QAAU,CAAC,aAAe,iCAAiC,kBAAoB,sCAAsC,mBAAqB,uCAAuC,QAAU,4BAA4B,KAAO,yBAAyB,SAAW,6BAA6B,SAAW,6BAA6B,QAAU,4BAA4B,UAAY,8BAA8B,KAAO,yBAAyB,OAAS,2BAA2B,UAAY,gC,oBCA9eD,EAAOC,QAAU,CAAC,SAAW,+BAA+B,WAAa,iCAAiC,UAAY,kC,oBCAtHD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,UAAY,iCAAiC,WAAa,kCAAkC,KAAO,4BAA4B,MAAQ,6BAA6B,OAAS,8BAA8B,SAAW,gCAAgC,UAAY,iCAAiC,MAAQ,6BAA6B,eAAiB,sCAAsC,YAAc,qC,oBCAlcD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,+B,oBCA/DD,EAAOC,QAAU,CAAC,SAAW,kC,oBCA7BD,EAAOC,QAAU,CAAC,SAAW,mCAAmC,WAAa,uC,kICoB9DC,MAhBf,YAAoC,IAAZC,EAAW,EAAXA,QAElB/C,EAAYC,YAAiB8C,GAGjC,OACE,oCACG/C,GACC,yBAAKxD,UAAWkC,IAAOC,eACrB,kBAAC2D,EAAA,EAAD,CAAWC,OAAQvC,EAAWgD,KAAK,O,mJC+C9BC,MAzDf,YAAoC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACjB3C,EAAS0C,EAAT1C,KACA4C,EAAkBD,EAAlBC,cAFyB,EAGX5F,mBAAS,IAHE,mBAG1B6F,EAH0B,KAGrBC,EAHqB,OAIG9F,mBAAS,IAJZ,mBAI1B+F,EAJ0B,KAIdC,EAJc,OA4CqBC,YAAY,CAAEC,OAtCrD,SAAAC,GAIbL,EAAO,IACP,IAAIM,EAAiBD,EAAcE,OAAO,GAEtCC,EADK,sBAAOP,GAAP,YAAsBK,IACLC,OAAO,GAIjC,OAFAL,EAAcM,GAENA,EAAc5E,QACpB,KAAK,EACHoE,EAAOD,EAAIQ,MAAM,EAAG,IACpB,MACF,KAAK,EACHP,EAAOD,EAAIQ,MAAM,EAAG,IACpB,MACF,KAAK,EACHP,EAAOD,EAAIQ,MAAM,EAAG,IAnBM,2BAuB9B,IAvB8B,IAuB9B,EAvB8B,iBAuBnBE,EAvBmB,QAwBtBC,EAAe,IAAIC,WACzBD,EAAaE,iBACX,QACA,WACEZ,GAAO,SAAAa,GAAO,4BAAQA,GAAR,CAAiB,CAAE3D,KAAMwD,EAAaI,gBAEtD,GAEFJ,EAAaK,cAAcN,IAT7B,EAAmBD,EAAnB,+CAAmC,IAvBL,kFAmC9BV,EAAc5C,EAAMsD,IAGsDQ,UAAU,IAA9EC,EA5CyB,EA4CzBA,aAAcC,EA5CW,EA4CXA,cAEtB,OA9CiC,EA4CIC,aAGnC,iCACE,wBAASF,EAAa,CAAE/H,UAAW,aACjC,0BAAWgI,KACX,qDAEDnB,EAAInE,OAAS,kBAACoD,EAAA,EAAD,CAAWC,OAAQc,IAAU,O,yjBChDjD,IAuDeqB,EAvDI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAiCxBC,EAAYC,YAAW,CAC3BC,iBAD2B,YAEzB,MAAO,CACLhD,OAFwC,EAAzBA,QAEG,KAClBK,KAHwC,EAAjBA,MAGT,GACdnB,QAJwC,EAAXA,SAIT,KAIxB+D,iBAAkBC,WAAaC,MAAM,CACnCnD,OAAQkD,WAAaE,SAAS,qBAC9B/C,KAAM6C,WAAaG,IAAI,IAAK,qBAG9BC,aAAc,SAACC,EAAD,GAA8C,EAAnCC,cAAmC,EAApBC,cACtCb,EAAS,CAAExF,UAAU,EAAD,GAAOmG,EAAP,CAAejF,SAAUuE,QAf/BE,EAhCH,SAAC,GAAgD,IAA9CQ,EAA6C,EAA7CA,OAAQG,EAAqC,EAArCA,OAAiBrC,GAAoB,EAA7BsC,QAA6B,EAApBtC,eACzC,OACE,yBAAK5G,UAAWkC,IAAOiH,cACrB,yBAAKnJ,UAAWkC,IAAOkH,WACrB,kBAAC,IAAD,KACE,yBAAKpJ,UAAWkC,IAAOmH,gBACrB,6BACE,kBAACC,EAAA,EAAD,CACEtF,KAAK,SACLxB,MAAOsG,EAAOvD,OACdlD,SAAU,SAACkH,EAAOC,GAChB5C,EAAc,SAAU4C,MAG3BP,EAAO1D,QAAU,uBAAGvF,UAAWkC,IAAOL,OAArB,yBAEpB,6BACE,kBAAC,IAAD,CAAY4H,WAAS,EAACC,KAAK,IAAI1F,KAAK,OAAO2F,MAAM,0BAGnD,yBAAK3J,UAAWkC,IAAO0H,UACrB,kBAAC,IAAD,CAAO5F,KAAK,UAAU6F,UAAWC,KAGnC,kBAAC,IAAD,CAAU1I,KAAK,UAAf,sBA2BZ,OAAO,kBAACiH,EAAD,O,iBC3BM0B,EA1BG,SAAC,GAA6C,IAA3C3B,EAA0C,EAA1CA,WAAY4B,EAA8B,EAA9BA,WAAYxJ,EAAkB,EAAlBA,YACrCyJ,EAAcC,qBAAWC,KAD8B,EAGlB1I,YAAY2I,IAAe,CACpE1I,YADoE,YACrC,IAAjB2I,EAAgB,EAAhBA,aACZL,EAAWK,EAAaxG,UACxBoG,EAAY,CAAE7I,KAAM,eAAgBoB,MAAO,CAAErB,QAAS,4BAA6BC,KAAM,aACzFZ,IACA8J,OAAOC,SAAS,EAAG,IAErB3I,QAPoE,SAO5DC,GACNoI,EAAY,CAAE7I,KAAM,eAAgBoB,MAAO,CAAErB,QAAQ,qBAAD,OAAuBU,EAAMV,QAAQY,QAAQ,iBAAkB,KAAOX,KAAM,WAChIZ,IACA8J,OAAOC,SAAS,EAAG,MAbsC,mBAGtDF,EAHsD,YAGtCpI,EAHsC,EAGtCA,QAHsC,EAG7BJ,MAchC,OACE,6BACGI,GAAW,kBAACuI,EAAA,EAAD,MACZ,4CACA,kBAAC,EAAD,CAAYrC,SAAUkC,EAAcjC,WAAYA,M,0CCXhDqC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,aACHC,QAAS,OACTC,SAAU,UACTH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BF,SAAU,eA8GDG,MAzGf,YAA+C,IAAtBC,EAAqB,EAArBA,QAASrH,EAAY,EAAZA,SAC1BsH,EAAUV,IAD4B,EAEdzJ,mBAAS,MAFK,mBAErCoK,EAFqC,KAE5BpB,EAF4B,KAGtCC,EAAcC,qBAAWC,KAHa,EAIlBnJ,oBAAS,GAJS,mBAIrCqK,EAJqC,KAI9BC,EAJ8B,KAKtCnI,EAAWC,wBAAc,CAC7BC,MAAO,8BAGHS,EAAsFD,EAAtFC,IAAKE,EAAiFH,EAAjFG,KAAMuH,EAA2E1H,EAA3E0H,aAAcC,EAA6D3H,EAA7D2H,KAAM/G,EAAuDZ,EAAvDY,QAASgH,EAA8C5H,EAA9C4H,OAAQC,EAAsC7H,EAAtC6H,IAAKxG,EAAiCrB,EAAjCqB,OAAQyG,EAAyB9H,EAAzB8H,OAAQC,EAAiB/H,EAAjB+H,MAAOC,EAAUhI,EAAVgI,MATtC,EAUIpK,YAAYqK,IAAc,CACxEpK,YADwE,WAEtEuI,EAAY,CAAE7I,KAAM,eAAgBoB,MAAO,CAAErB,QAAQ,oDAAsDC,KAAM,aACjHkJ,OAAOC,SAAS,EAAG,IAErB3I,QALwE,WAMtEqI,EAAY,CAAE7I,KAAM,eAAgBoB,MAAO,CAAErB,QAAS,6CAA8CC,KAAM,WAC1GkJ,OAAOC,SAAS,EAAG,MAjBqB,mBAUrCwB,EAVqC,YAUhBlK,GAVgB,EAUtB6B,KAVsB,EAUhB7B,OAAOI,EAVS,EAUTA,QAW/BJ,IACFoI,EAAY,CAAE7I,KAAM,eAAgBoB,MAAO,CAAErB,QAAS,6CAA8CC,KAAM,WAC1GkJ,OAAOC,SAAS,EAAG,IAGN,MAAXa,IACFlG,EAASkG,EAAQlG,OACjByG,EAASP,EAAQO,QAGnB,IAAIpG,EAASL,EAASyG,EAASzG,EAAS,EAElC1E,EAAc,WAClB8K,GAAS,IASX,OAFAhI,QAAQC,IAAIsI,GAGV,kBAAC,WAAD,KACE,kBAAC1L,EAAA,EAAD,CAAOJ,KAAMsL,EAAO7K,YAAaA,GAC/B,kBAAC,EAAD,CAAW4H,WAAYtE,EAAKkG,WAAYA,EAAYxJ,YAAaA,KAEnE,yBAAKR,UAAWkC,IAAO8J,MACrB,yBAAKhM,UAAWkC,IAAO+J,WACrB,yBAAKjM,UAAWkC,IAAOgK,gBAAiBzH,EAAU,yBAAKC,IAAKD,IAAc,kBAAC,IAAD,CAAeE,KAAK,MAAMC,MAAM,aAC1G,6BACE,wBAAI5E,UAAWkC,IAAO8B,MAAOe,YAAkBf,IAC/C,yBAAKhE,UAAWkC,IAAO2J,OAAQA,GAC/B,yBAAK7L,UAAWkC,IAAOmD,WACrB,kBAACC,EAAA,EAAD,CAAc9C,MAAO+C,EAAQZ,KAAOxB,EAAqB,SAAV,QAAoBgJ,UAAW,GAAK3G,UAAQ,IAC3F,6BACGN,EADH,UACkBA,EAAS,EAAI,IAAM,OAGvC,yBAAKlF,UAAWkC,IAAOkD,UACrB,kBAAC,OAAD,CAAMN,GAAE,wBAAmB0G,EAAnB,YAA2BD,EAA3B,gBAA+CG,IAAQH,EAA/D,MACA,kBAAC,OAAD,CAAMzG,GAAE,wBAAmB0G,EAAnB,gBAA+BE,IAAQF,EAA/C,MAEF,yBAAKxL,UAAWkC,IAAOuJ,QACpBA,EAAOW,KAAI,SAACX,EAAQY,GAAT,OACV,0BAAM/H,IAAK+H,GACT,kBAAC,OAAD,CAAMvH,GAAE,wBAAmB4G,EAAnB,YAA0BD,EAA1B,iBAAyCD,IAASC,EAA1D,MAA2E,WAOrF,yBAAKzL,UAAWkC,IAAOoK,aACrB,6BACE,kBAACC,EAAA,EAAD,CACEvM,UAAWmL,EAAQP,KACnBhG,MAAM,UACND,KAAMxB,EAAW,SAAW,QAC5BqJ,KAAM,kBAAC,IAAD,MACN7C,MAAM,kBACN8C,WAAW,EACXxM,QAAS,WACKyM,YAAcxB,EAASjB,IAEjCqB,GAAS,QAMfM,GACA,uBAAG5L,UAAWkC,IAAOyK,MAAO1M,QAxDtB,WACd8L,EAAY,CAAEpJ,UAAW,CAAEkB,SAAUC,OAuD7B,gBAOL7B,GAAW,kBAACuI,EAAA,EAAD,Q,kBCjHHoC,MAXf,SAAuB9M,GACrB,OACE,6BACI,yBAAKE,UAAWkC,IAAO2K,UACrB,wBAAI7M,UAAU,gBAAd,sBACA,6BAAMF,EAAMyB,S,2BCSPuL,MAbf,YAAwC,IAAZvG,EAAW,EAAXA,QAC1B,OAEI,yBAAKvG,UAAWkC,IAAO2K,UACrB,wBAAI7M,UAAU,gBAAd,WACCuG,EAAQ6F,KAAI,SAAAW,GAAG,OACd,kBAAChK,EAAA,EAAD,CAAYC,OAAQ+J,EAAKzI,IAAKyI,EAAIjJ,W,QC+C7BkJ,UA9Cf,SAAuBlN,GACrB,IAAMmK,EAAcC,qBAAWC,KADH,EAGK8C,YAASC,IAA2B,CACnEvK,UAAW,CAAEC,GAAI9C,EAAMqN,MAAMC,OAAOxK,GAAIyK,YAAY,KAD9CpL,EAHoB,EAGpBA,QAASJ,EAHW,EAGXA,MAAO6B,EAHI,EAGJA,KAIxB4J,qBAAU,WACJzL,GACFoI,EAAY,CAAE7I,KAAM,eAAgBoB,MAAO,CAAErB,QAASU,EAAMV,QAAQY,QAAQ,iBAAkB,IAAKX,KAAM,aAE1G,CAACS,IAEJ,IAAIgC,EAAW,KACX0C,EAAU,KACVR,EAAS,GAgBb,MAdmB,oBAARrC,IAET6C,GADA1C,EAAWH,EAAOA,EAAKG,SAAW,MACbA,EAAS0C,QAAU,KACxCR,EAAS,GAEa,oBAAXQ,GACTA,EAAQgH,SAAQ,SAAAR,GACVS,MAAMC,QAAQV,EAAItI,WACpBsB,EAAM,sBAAOA,GAAP,YAAkBgH,EAAItI,eAOlC,kBAACiJ,EAAA,EAAD,CAAMC,MAAM,gBAAgBC,YAAY,GACrC3L,GAAW,kBAACuI,EAAA,EAAD,MACX3G,GACC,oCACE,kBAAC,EAAD,CAAc0C,QAASA,IACvB,kBAAC,EAAD,CAAe1C,SAAUA,EAAUqH,QAASpL,EAAMoL,UAClD,kBAAC,EAAD,CAAe3J,KAAMsC,EAAStC,OAC9B,kBAAC,EAAD,CAAkBgF,QAASA","file":"static/js/9.cb16be6f.chunk.js","sourcesContent":["import gql from \"graphql-tag\"\r\n\r\nexport const CREATE_REVREPORT = gql`\r\n  mutation CreateRevReport($id: ID!, $report: String!) {\r\n    createRevReport(data: { id: $id, report: $report }) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_REVREPORTS = gql`\r\n  query RevReports {\r\n    revReports {\r\n      _id\r\n      createdAt\r\n      report\r\n      decision\r\n      from {\r\n        _id\r\n        userName\r\n        email\r\n      }\r\n      review {\r\n        _id\r\n        text\r\n        business {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_REVREPORT = gql`\r\n  mutation UpdateRevReport($id: ID!, $decision: String) {\r\n    updateRevReport(id: $id, data: { decision: $decision }) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n","import React from 'react';\r\nimport  './Backdrop.scss';\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './Modal.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.update !== this.props.update\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className='Modal'\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                   {this.props.show ? this.props.children : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react'\r\nimport styles from './ReviewReportForm.module.scss'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport {CREATE_REVREPORT} from '../../../../../qraphQl/revStatType'\r\nimport FlashMessage from '../../../FlashMessage/FlashMessage'\r\n\r\nconst ReviewReportForm = ({reviewId}) => {\r\n\r\n    const [isSubmiting, setIsSubmiting] = useState(false)\r\n    const [flash, setFlash] = useState({message: null, type: null})\r\n    const [desc, setDesc] = useState('explain why review is inapropriate')\r\n\r\n    const [createRevReport, {loading}] = useMutation(\r\n        CREATE_REVREPORT,\r\n        {\r\n          onCompleted({updateImage}) {\r\n            setIsSubmiting(false)\r\n            setFlash({message:'Thank you we will check the review' , type: 'sucess'})\r\n          },\r\n          onError(error) {\r\n              let errMsg = error.message.replace('GraphQL error:', '')\r\n            setFlash({message: errMsg , type: 'error'})\r\n          }\r\n        })\r\n\r\n    const descChange = (e)=> {\r\n        setFlash({message:null , type: null})\r\n        let val = e.target.value\r\n        setDesc(e.target.value)\r\n    }\r\n\r\n    const submitDesc = () => {\r\n        if(isSubmiting) {\r\n            return\r\n        }\r\n        setIsSubmiting(true)\r\n        let length = desc.length\r\n\r\n        if(length == 0) {\r\n            setFlash({message:`Please explain why` , type: 'error'})\r\n            setIsSubmiting(false) \r\n        }\r\n\r\n        else if(desc && length > 100 ){\r\n            setFlash({message:`Do not exceed 100 letters you are at ${length}` , type: 'error'})  \r\n            setIsSubmiting(false)\r\n\r\n        } \r\n\r\n        else {\r\n            createRevReport({variables: {\r\n                id: reviewId, report: desc}\r\n             })\r\n        }  \r\n    }\r\n\r\n    return(\r\n        <div className={styles.mainContainer}>\r\n            <div>\r\n              <textarea className={styles.textAreaDesc} onChange={descChange} value={desc}  />\r\n            </div>\r\n            <span className={styles.btnDesc} onClick={submitDesc}>Submit</span>\r\n            {flash.message && <FlashMessage message={flash.message} type={flash.type} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewReportForm","import React, { useState, Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ReviewReportForm from \"./ReviewReportForm/ReviewReportForm\"\r\nimport Modal from \"../../Modal/Modal\"\r\nimport styles from \"./ReviewCard.module.scss\"\r\nimport ImageGrid from \"../../../UI/ImageGrid/ImageGrid\"\r\nimport Clap from \"../../Clap/Clap\"\r\nimport { StyledRating } from \"../../../UI/CustomFields/StyledRating\"\r\nimport dayjs from \"dayjs\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\nimport { upCaseFirstLetter } from \"../../../../utils/string\"\r\nimport { BsFillPeopleFill, BsStarFill } from \"react-icons/bs\"\r\nimport { AiFillCamera } from \"react-icons/ai\"\r\nimport { FaUserCircle } from \"react-icons/fa\"\r\nimport { AiOutlineShop } from \"react-icons/ai\"\r\nimport imageFromReviews from \"../../../../utils/imageFromReviews\"\r\n\r\nfunction ReviewCard({ review }) {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const isTablet = useMediaQuery({\r\n    query: \"(min-device-width: 768px)\"\r\n  })\r\n\r\n  console.log(review)\r\n\r\n  let modalInfo = imageFromReviews(review)\r\n\r\n  let data = null\r\n  let url = null\r\n  let isUser = false\r\n  let type = \"business\" // used to define the link in the modal image\r\n\r\n  if (typeof review.business != \"undefined\") {\r\n    data = review.business\r\n    url = `/business/${data._id}`\r\n  } else if (typeof review.author != \"undefined\") {\r\n    data = review.author\r\n    data.name = data.userName\r\n    url = `/profile/${data._id}`\r\n    type = \"profile\"\r\n    isUser = true\r\n  }\r\n\r\n  const dt = dayjs(review.createdAt)\r\n\r\n  const modalClosed = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal show={showModal} modalClosed={modalClosed}>\r\n        <ReviewReportForm reviewId={review._id} />\r\n      </Modal>\r\n\r\n      <div className={styles.revContainer} id={review._id} key={review._id}>\r\n        <div className={styles.revContainerInner}>\r\n          <div className={styles.revContainerAvatar}>{data.picture ? <img src={data.picture} /> : isUser ? <FaUserCircle size=\"90%\" color=\"#0996e8\" /> : <AiOutlineShop size=\"90%\" color=\"#0996e8\" />}</div>\r\n          <div>\r\n            <div className={styles.revAuth}>\r\n              <Link to={url}>{upCaseFirstLetter(data.name)}</Link>\r\n            </div>\r\n            <div className={styles.revChips}>\r\n              <div className=\"chipsContainer\">\r\n                {isUser && (\r\n                  <div className=\"chip\">\r\n                    <BsFillPeopleFill color=\"#0996e8\" />\r\n                    <div className=\"label\">{`${data.followers.length} ${isTablet ? \"Followers\" : \"\"}`}</div>\r\n                  </div>\r\n                )}\r\n                <div className=\"chip\">\r\n                  <BsStarFill color=\"#0996e8\" />\r\n                  <div className=\"label\">{`${data.nbrRev} ${isTablet ? \"Reviews\" : \"\"}`} </div>\r\n                </div>\r\n                <div className=\"chip\">\r\n                  <AiFillCamera color=\"#0996e8\" />\r\n                  <div className=\"label\">{`${data.revPic} ${isTablet ? \"Photos\" : \"\"}`}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.location}>\r\n              <Link to={`/business/location/casablanca`}>Casablanca</Link>\r\n            </div>\r\n            <div className={styles.revRating}>\r\n              <StyledRating value={review.rating} size={!isTablet ? \"small\" : \"medium\"} readOnly />\r\n              <div className={styles.date}>{dt.format(\"DD-MM-YYYY\")}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <p className={styles.revDesc}>{review.text}</p>\r\n\r\n        <div className={styles.revPicture}>\r\n          <ImageGrid images={modalInfo} type={type} />\r\n        </div>\r\n\r\n        <div className={styles.clap}>\r\n          <Clap claps={review.claps || 0} id={review._id} type=\"review\" />\r\n        </div>\r\n\r\n        <p className={styles.report}>\r\n          if review is inappropriate please\r\n          <span className={styles.reportbtn} onClick={() => setShowModal(true)}>\r\n            report it\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ReviewCard\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ReviewReportForm_mainContainer__D1aU4\",\"textAreaDesc\":\"ReviewReportForm_textAreaDesc__3KLWM\",\"btnDesc\":\"ReviewReportForm_btnDesc__3oEpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"revContainer\":\"ReviewCard_revContainer__1zAEQ\",\"revContainerInner\":\"ReviewCard_revContainerInner___NqKk\",\"revContainerAvatar\":\"ReviewCard_revContainerAvatar__24jYS\",\"revAuth\":\"ReviewCard_revAuth__3-Ul-\",\"date\":\"ReviewCard_date__1TuXG\",\"revChips\":\"ReviewCard_revChips__Tv0KD\",\"location\":\"ReviewCard_location__3XDeC\",\"revDesc\":\"ReviewCard_revDesc__KU6sl\",\"revRating\":\"ReviewCard_revRating__MTHIJ\",\"clap\":\"ReviewCard_clap__3x5kp\",\"report\":\"ReviewCard_report__2Zp2b\",\"reportbtn\":\"ReviewCard_reportbtn__kwa21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBtn\":\"BuzSinglePic_modalBtn__qWgo3\",\"imgGridTop\":\"BuzSinglePic_imgGridTop__YPLKl\",\"singleImg\":\"BuzSinglePic_singleImg__pJiWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"BuzSingleHead_head__1Envl\",\"headInner\":\"BuzSingleHead_headInner__-l25O\",\"profileImg\":\"BuzSingleHead_profileImg__2eGR0\",\"name\":\"BuzSingleHead_name__2BOG0\",\"price\":\"BuzSingleHead_price__3WLMV\",\"subCat\":\"BuzSingleHead_subCat__16FnG\",\"location\":\"BuzSingleHead_location__2olMw\",\"revRating\":\"BuzSingleHead_revRating__2KGSe\",\"claim\":\"BuzSingleHead_claim__APQKi\",\"imageContainer\":\"BuzSingleHead_imageContainer__3Y5ej\",\"reviewClaim\":\"BuzSingleHead_reviewClaim__2EKat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ReviewForm_error__3kK-T\",\"dropZone\":\"ReviewForm_dropZone__1Uoeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBody\":\"BuzSingleDesc_mainBody__2S4N3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBody\":\"BuzSingleReviews_mainBody__ySEIz\",\"reviewCard\":\"BuzSingleReviews_reviewCard__2yWyT\"};","import React, { useState } from \"react\"\r\nimport ImageGrid from \"../../../../UI/ImageGrid/ImageGrid\"\r\nimport styles from \"./BuzSinglePic.module.scss\"\r\nimport imageFromReviews from \"../../../../../utils/imageFromReviews\"\r\n\r\nfunction BuzSinglePic({ reviews }) {\r\n  \r\n  let modalInfo = imageFromReviews(reviews)\r\n\r\n\r\n  return (\r\n    <>\r\n      {modalInfo  && (\r\n        <div className={styles.mainContainer}>\r\n          <ImageGrid images={modalInfo} top={true}  /> \r\n          \r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default BuzSinglePic\r\n","import React, { useCallback, useState, useEffect } from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport ImageGrid from \"../../UI/ImageGrid/ImageGrid\"\r\n\r\nfunction DropZone({ field, form }) {\r\n  const { name } = field\r\n  const { setFieldValue } = form\r\n  const [img, setImg] = useState([])\r\n  const [statefiles, setStatefiles] = useState([])\r\n\r\n  const onDrop = acceptedFiles => {\r\n    // file is what is sent to the server\r\n    // img is what is sent to the image grid component\r\n\r\n    setImg([])\r\n    let firstThreeFile = acceptedFiles.slice(-3)\r\n    let files = [...statefiles, ...firstThreeFile]\r\n    let selectedFiles = files.slice(-3)\r\n\r\n    setStatefiles(selectedFiles)\r\n\r\n    switch (selectedFiles.length) {\r\n      case 1:\r\n        setImg(img.slice(0, 1))\r\n        break\r\n      case 1:\r\n        setImg(img.slice(0, 2))\r\n        break\r\n      case 1:\r\n        setImg(img.slice(0, 3))\r\n        break\r\n    }\r\n\r\n    for (const file of selectedFiles) {\r\n      const myFileReader = new FileReader()\r\n      myFileReader.addEventListener(\r\n        \"load\",\r\n        () => {\r\n          setImg(prevImg => [...prevImg, { name: myFileReader.result }])\r\n        },\r\n        false\r\n      )\r\n      myFileReader.readAsDataURL(file)\r\n    }\r\n\r\n    setFieldValue(name, selectedFiles)\r\n  }\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, multiple: true })\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p>Select up to 3 images</p>\r\n      </div>\r\n      {img.length ? <ImageGrid images={img} /> : null}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DropZone\r\n","import React from \"react\"\r\nimport { withFormik, Form, Field } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport styles from \"./ReviewForm.module.scss\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport { MyTextArea, MyButton } from \"../UI/CustomFields/CustomField\"\r\nimport DropZoneMultiple from \"../UI/Upload/DropZoneMultiple\"\r\n\r\nconst ReviewForm = ({ onSubmit, businessId }) => {\r\n  const myForm = ({ values, errors, touched, setFieldValue }) => {\r\n    return (\r\n      <div className={styles.topContainer}>\r\n        <div className={styles.container}>\r\n          <Form>\r\n            <div className={styles.innerContainer}>\r\n              <div>\r\n                <Rating\r\n                  name=\"rating\"\r\n                  value={values.rating}\r\n                  onChange={(event, newValue) => {\r\n                    setFieldValue(\"rating\", newValue)\r\n                  }}\r\n                />\r\n                {errors.rating && <p className={styles.error}> please add a rating</p>}\r\n              </div>\r\n              <div>\r\n                <MyTextArea multiline rows=\"4\" name=\"text\" label=\"Business Description\" />\r\n              </div>\r\n\r\n              <div className={styles.dropZone}>\r\n                <Field name=\"picture\" component={DropZoneMultiple}></Field>\r\n              </div>\r\n\r\n              <MyButton type=\"submit\">Send Review</MyButton>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const RevFormik = withFormik({\r\n    mapPropsToValues({ rating, text, picture }) {\r\n      return {\r\n        rating: rating || null,\r\n        text: text || \"\",\r\n        picture: picture || []\r\n      }\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n      rating: Yup.number().required(\"Email is required\"),\r\n      text: Yup.string().max(800, \"review too long\")\r\n    }),\r\n\r\n    handleSubmit: (values, { setSubmitting, setFieldError }) => {\r\n      onSubmit({ variables: { ...values, business: businessId } })\r\n    }\r\n  })(myForm)\r\n\r\n  return <RevFormik />\r\n}\r\n\r\nexport default ReviewForm\r\n","import React, { useContext } from \"react\"\r\nimport ReviewForm from \"./ReviewForm\"\r\nimport { useMutation } from \"@apollo/react-hooks\"\r\nimport Spinner from \"../UI/Spinner/Spinner\"\r\nimport { CREATE_REVIEW } from \"../../qraphQl/reviewType\"\r\nimport { DispatchContext } from \"../../Context\"\r\n\r\nconst AddReview = ({ businessId, setBuzStat, modalClosed }) => {\r\n  const appDispatch = useContext(DispatchContext)\r\n\r\n  const [createReview, { loading, error }] = useMutation(CREATE_REVIEW, {\r\n    onCompleted({ createReview }) {\r\n      setBuzStat(createReview.business)\r\n      appDispatch({ type: \"flashMessage\", value: { message: \"Thank you, Review created\", type: \"success\" } })\r\n      modalClosed()\r\n      window.scrollTo(0, 0)\r\n    },\r\n    onError(error) {\r\n      appDispatch({ type: \"flashMessage\", value: { message: `Review Not Added: ${error.message.replace(\"GraphQL error:\", \"\")}`, type: \"error\" } })\r\n      modalClosed()\r\n      window.scrollTo(0, 0)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Spinner />}\r\n      <h2>Add a review</h2>\r\n      <ReviewForm onSubmit={createReview} businessId={businessId} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddReview\r\n","import React, { useState, Fragment, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useMutation } from \"@apollo/react-hooks\"\r\nimport Spinner from \"../../../../UI/Spinner/Spinner\"\r\nimport { CREATE_CLAIM } from \"../../../../../qraphQl/businessType\"\r\nimport { Chip, makeStyles } from \"@material-ui/core\"\r\nimport styles from \"./BuzSingleHead.module.scss\"\r\nimport GradeIcon from \"@material-ui/icons/Grade\"\r\nimport Modal from \"../../../../UI/Modal/Modal\"\r\nimport AddReview from \"../../../../Review/AddReview\"\r\nimport { loginRequired } from \"../../../../../AccessToken\"\r\nimport { StyledRating } from \"../../../../UI/CustomFields/StyledRating\"\r\nimport { upCaseFirstLetter } from \"../../../../../utils/string\"\r\nimport { DispatchContext } from \"../../../../../Context\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\nimport { AiOutlineShop } from \"react-icons/ai\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  chip: {\r\n    padding: \"1rem\",\r\n    fontSize: \"0.9rem\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      fontSize: \"1.2rem\"\r\n    }\r\n  }\r\n}))\r\n\r\nfunction BuzSingleHead({ history, business }) {\r\n  const classes = useStyles()\r\n  const [buzStat, setBuzStat] = useState(null)\r\n  const appDispatch = useContext(DispatchContext)\r\n  const [modal, setModal] = useState(false)\r\n  const isTablet = useMediaQuery({\r\n    query: \"(min-device-width: 768px)\"\r\n  })\r\n\r\n  let { _id, name, neighborhood, city, picture, subCat, cat, nbrRev, totRev, owner, price } = business\r\n  const [createClaim, { data, error, loading }] = useMutation(CREATE_CLAIM, {\r\n    onCompleted() {\r\n      appDispatch({ type: \"flashMessage\", value: { message: `claim is sent, we will soon contact you via email`, type: \"success\" } })\r\n      window.scrollTo(0, 0)\r\n    },\r\n    onError() {\r\n      appDispatch({ type: \"flashMessage\", value: { message: \"Somethicng is wrong please try again later\", type: \"error\" } })\r\n      window.scrollTo(0, 0)\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    appDispatch({ type: \"flashMessage\", value: { message: \"Somethicng is wrong please try again later\", type: \"error\" } })\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  if (buzStat != null) {\r\n    nbrRev = buzStat.nbrRev\r\n    totRev = buzStat.totRev\r\n  }\r\n\r\n  let rating = nbrRev ? totRev / nbrRev : 0\r\n\r\n  const modalClosed = () => {\r\n    setModal(false)\r\n  }\r\n\r\n  const claimIt = () => {\r\n    createClaim({ variables: { business: _id } })\r\n  }\r\n\r\n  console.log(price)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal show={modal} modalClosed={modalClosed}>\r\n        <AddReview businessId={_id} setBuzStat={setBuzStat} modalClosed={modalClosed} />\r\n      </Modal>\r\n      <div className={styles.head}>\r\n        <div className={styles.headInner}>\r\n          <div className={styles.imageContainer}>{picture ? <img src={picture} /> : <AiOutlineShop size=\"90%\" color=\"#0996e8\" />}</div>\r\n          <div>\r\n            <h2 className={styles.name}>{upCaseFirstLetter(name)}</h2>\r\n            <div className={styles.price}>{price}</div>\r\n            <div className={styles.revRating}>\r\n              <StyledRating value={rating} size={!isTablet ? \"small\" : \"medium\"} precision={0.5} readOnly />\r\n              <div>\r\n                {nbrRev} review{nbrRev > 1 ? \"s\" : null}\r\n              </div>\r\n            </div>\r\n            <div className={styles.location}>\r\n              <Link to={`/tax/location/${city}/${neighborhood}?cat=${cat}`}>{neighborhood}, </Link>\r\n              <Link to={`/tax/location/${city}?cat=${cat}`}>{city} </Link>\r\n            </div>\r\n            <div className={styles.subCat}>\r\n              {subCat.map((subCat, i) => (\r\n                <span key={i}>\r\n                  <Link to={`/tax/category/${cat}/${subCat}?city=${city}`}>{subCat}, </Link>{\" \"}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reviewClaim}>\r\n          <div>\r\n            <Chip\r\n              className={classes.chip}\r\n              color=\"primary\"\r\n              size={isTablet ? \"medium\" : \"small\"}\r\n              icon={<GradeIcon />}\r\n              label=\"Review Business\"\r\n              clickable={true}\r\n              onClick={() => {\r\n                let login = loginRequired(history, appDispatch)\r\n                if (login) {\r\n                  setModal(true)\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {!owner && (\r\n            <p className={styles.claim} onClick={claimIt}>\r\n              Claim it !\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {loading && <Spinner />}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BuzSingleHead\r\n","import React from \"react\"\r\nimport styles from \"./BuzSingleDesc.module.scss\"\r\n\r\nfunction BuzSingleDesc(props) {\r\n  return (\r\n    <div>\r\n        <div className={styles.mainBody}>\r\n          <h2 className=\"sectionTitle\">About the Business</h2>\r\n          <div>{props.desc}</div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BuzSingleDesc\r\n","import React from \"react\"\r\nimport styles from \"./BuzSingleReviews.module.scss\"\r\nimport ReviewCard from \"../../../../UI/Cards/ReviewCard/ReviewCard\"\r\n\r\nfunction BuzSingleReviews({ reviews }) {\r\n  return (\r\n   \r\n      <div className={styles.mainBody}>\r\n        <h2 className=\"sectionTitle\">Reviews</h2>\r\n        {reviews.map(rev => (\r\n          <ReviewCard review={rev} key={rev._id} />\r\n        ))}\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default BuzSingleReviews\r\n","import React, { useEffect, useContext } from \"react\"\r\nimport { GET_BUSINESS_WITH_REVIEWS } from \"../../../qraphQl/businessType\"\r\nimport { useQuery } from \"@apollo/react-hooks\"\r\nimport Spinner from \"../../UI/Spinner/Spinner\"\r\nimport BuzSinglePic from \"./BuzSingleComp/BuzSinglePic/BuzSinglePic\"\r\nimport BuzSingleHead from \"./BuzSingleComp/BuzSingleHead/BuzSingleHead\"\r\nimport BuzSingleDesc from \"./BuzSingleComp/BuzSingleDesc/BuzSingleDesc\"\r\nimport BuzSingleReviews from \"./BuzSingleComp/BuzSingleReviews/BuzSingleReviews\"\r\nimport { DispatchContext } from \"../../../Context\"\r\nimport Page from \"../../Page/Page\"\r\n\r\nfunction BuzSinglePage(props) {\r\n  const appDispatch = useContext(DispatchContext)\r\n\r\n  const { loading, error, data } = useQuery(GET_BUSINESS_WITH_REVIEWS, {\r\n    variables: { id: props.match.params.id, onlyAuthor: false }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      appDispatch({ type: \"flashMessage\", value: { message: error.message.replace(\"GraphQL error:\", \"\"), type: \"error\" } })\r\n    }\r\n  }, [error])\r\n\r\n  let business = null\r\n  let reviews = null\r\n  let images = []\r\n\r\n  if (typeof data != \"undefined\") {\r\n    business = data ? data.business : null\r\n    reviews = business ? business.reviews : null\r\n    images = []\r\n\r\n    if (typeof reviews != \"undefined\") {\r\n      reviews.forEach(rev => {\r\n        if (Array.isArray(rev.picture)) {\r\n          images = [...images, ...rev.picture]\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Page title=\"Business Page\" withTopBar={true}>\r\n      {loading && <Spinner />}\r\n      {business && (\r\n        <>\r\n          <BuzSinglePic reviews={reviews} />\r\n          <BuzSingleHead business={business} history={props.history} />\r\n          <BuzSingleDesc desc={business.desc} />\r\n          <BuzSingleReviews reviews={reviews} />\r\n        </>\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default BuzSinglePage\r\n"],"sourceRoot":""}